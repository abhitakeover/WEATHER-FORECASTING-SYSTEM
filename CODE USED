#include <stdio.h>
#include <stdlib.h>
#include <curl/curl.h>
#include <string.h>
#include <errno.h>

#define API_KEY "YOUR_API_KEY"

struct curl_response {
  char *ptr;
  size_t len;
};

size_t write_callback(void *contents, size_t size, size_t nmemb, void *userp) {
  size_t realsize = size * nmemb;
  struct curl_response *mem = (struct curl_response *)userp;

  char *ptr = realloc(mem->ptr, mem->len + realsize + 1);

  if (ptr == NULL) {
    fprintf(stderr, "Error: Failed to allocate memory. %s\n", strerror(errno));
    return 0;
  }

  mem->ptr = ptr;
  memcpy(&(mem->ptr[mem->len]), contents, realsize);
  mem->len += realsize;
  mem->ptr[mem->len] = '\0';

  return realsize;
}

int main(void) {
  CURL *curl;
  CURLcode res;
  char *url = "https://api.openweathermap.org/data/2.5/weather?q=Paris&appid=" API_KEY "&units=metric";
  struct curl_response response = {NULL, 0};

  curl = curl_easy_init();
  if (curl) {
    curl_easy_setopt(curl, CURLOPT_URL, url);
    curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
    curl_easy_setopt(curl, CURLOPT_ACCEPT_ENCODING, "gzip, deflate");
    curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, write_callback);
    curl_easy_setopt(curl, CURLOPT_WRITEDATA, &response);

    res = curl_easy_perform(curl);

    if (res != CURLE_OK) {
      fprintf(stderr, "Error: Failed to connect to the OpenWeatherMap API. %s\n", curl_easy_strerror(res));
    } else {
      // Parse the JSON response and extract the weather data
      char *weather = strstr(response.ptr, "\"description\":\"") + 15;
      char *end = strstr(weather, "\",");
      *end = '\0';
      char *temp = strstr(response.ptr, "\"temp\":") + 7;
      char *temp_end = strstr(temp, ",");
      *temp_end = '\0';
      char *feels_like = strstr(response.ptr, "\"feels_like\":") + 14;
      char *feels_like_end = strstr(feels_like, ",");
      *feels_like_end = '\0';
      char *humidity = strstr(response.ptr, "\"humidity\":") + 11;
      char *humidity_end = strstr(humidity, ",");
      *humidity_end = '\0';
      char *wind_speed = strstr(response.ptr, "\"speed\":") + 8;
      char *wind_speed_end = strstr(wind_speed, ",");
      *wind_speed_end = '\0';

      // Display the weather data
      printf("Current weather in Paris:\n\n");
      printf("Weather: %s\n", weather);
      printf("Temperature: %s°C\n", temp);
      printf("Feels like: %s°C\n", feels_like);
      printf("Humidity: %s%%\n", humidity);
      printf("Wind speed: %s m/s\n", wind_speed);
    }

    curl_easy_cleanup(curl);
    free(response.ptr);
  }

  return 0;
}
